# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_xforce_hybrid"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_xforce_hybrid package"""
    reload_params = {"package": u"fn_xforce_hybrid",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"artifact_id", u"attachment_id", u"attachment_name", u"incident_id", u"target_ip"], 
                    "datatables": [], 
                    "message_destinations": [u"xforce_hybird_files_records"], 
                    "functions": [u"xforce_hybrid_artifacts_attachments"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"xforce_file_hash", u"xforce_hybrid_analyze_artifacts"], 
                    "actions": [u"xforce_hybrid_analyze_artifact", u"xforce_scan_file_hash"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     artifact_id
    #     attachment_id
    #     attachment_name
    #     incident_id
    #     target_ip
    #   Message Destinations:
    #     xforce_hybird_files_records
    #   Functions:
    #     xforce_hybrid_artifacts_attachments
    #   Workflows:
    #     xforce_file_hash
    #     xforce_hybrid_analyze_artifacts
    #   Rules:
    #     xforce_hybrid_analyze_artifact
    #     xforce_scan_file_hash


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImZhODc2NzI3LWM5OTgt
NDEwNi1hZmNhLTA1ZDdhNWUyMDE2MSIsICJkZXNjcmlwdGlvbiI6ICJ3b3JrZmxvdyBmb3IgYW5h
bHl6ZSBhcnRpZmFjdHMgY29udGFpbiBhdHRhY2htZW50cyBvciBpcCByZXB1dGF0aW9uIiwgIm9i
amVjdF90eXBlIjogImFydGlmYWN0IiwgImV4cG9ydF9rZXkiOiAieGZvcmNlX2h5YnJpZF9hbmFs
eXplX2FydGlmYWN0cyIsICJ3b3JrZmxvd19pZCI6IDQyLCAibGFzdF9tb2RpZmllZF9ieSI6ICJu
ZXdAZXhhbXBsZS5jb20iLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBc
IiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVz
aWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEv
WE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEt
aW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3Rc
Ij48cHJvY2VzcyBpZD1cInhmb3JjZV9oeWJyaWRfYW5hbHl6ZV9hcnRpZmFjdHNcIiBpc0V4ZWN1
dGFibGU9XCJ0cnVlXCIgbmFtZT1cInhmb3JjZV9oeWJyaWQgYW5hbHl6ZV9hcnRpZmFjdHNcIj48
ZG9jdW1lbnRhdGlvbj53b3JrZmxvdyBmb3IgYW5hbHl6ZSBhcnRpZmFjdHMgY29udGFpbiBhdHRh
Y2htZW50cyBvciBpcCByZXB1dGF0aW9uPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIvPjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBrbnZi
dnNcIiBuYW1lPVwieGZvcmNlX2h5YnJpZF9hcnRpZmFjdHNfYXR0YWNobWVuLi4uXCIgcmVzaWxp
ZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0
aW9uIHV1aWQ9XCI3NzExY2NkNC1hYmExLTRjZDMtOWQ4Zi03ZWMwMWUzOGUyZDVcIj57XCJpbnB1
dHNcIjp7fSxcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLmFydGlmYWN0X2lkID0g
YXJ0aWZhY3QuaWRcXG5pbnB1dHMudGFyZ2V0X2lwICAgPSBhcnRpZmFjdC52YWx1ZVwifTwvcmVz
aWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PC9zZXJ2aWNlVGFzaz48dGV4dEFu
bm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3
b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNz
b2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdl
dFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRp
YWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9
XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVs
ZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjI0MVwiIHk9XCIx
ODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9
XCI5MFwiIHg9XCIyMzZcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8x
a3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjY4XCIgeT1cIjE5MVwiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVq
NDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjI0
MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTY4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PC9icG1uZGk6QlBN
TkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wa252YnZz
XCIgaWQ9XCJTZXJ2aWNlVGFza18wa252YnZzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4
MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM0MlwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBl
PjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIs
ICJ3b3JrZmxvd19pZCI6ICJ4Zm9yY2VfaHlicmlkX2FuYWx5emVfYXJ0aWZhY3RzIiwgInZlcnNp
b24iOiA0fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NjQ1ODAzNTc5MzIsICJjcmVhdG9yX2lk
IjogIm5ld0BleGFtcGxlLmNvbSIsICJhY3Rpb25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6
ICJ4Zm9yY2VfaHlicmlkX2FuYWx5emVfYXJ0aWZhY3RzIiwgIm5hbWUiOiAieGZvcmNlX2h5YnJp
ZCBhbmFseXplX2FydGlmYWN0cyJ9LCB7InV1aWQiOiAiN2ZlZTBhOTMtNWI3Zi00MzMzLTllYTYt
YzJhNmM1NzY1YjFmIiwgImRlc2NyaXB0aW9uIjogIndvcmtmbG93IGZvciBsb29rdXAgYWJvdXQg
ZmlsZXMgaGFzaGVzIGlmIGl0IG1hbGljaW91cyBvciBub3QiLCAib2JqZWN0X3R5cGUiOiAiYXR0
YWNobWVudCIsICJleHBvcnRfa2V5IjogInhmb3JjZV9maWxlX2hhc2giLCAid29ya2Zsb3dfaWQi
OiA0MywgImxhc3RfbW9kaWZpZWRfYnkiOiAibmV3QGV4YW1wbGUuY29tIiwgImNvbnRlbnQiOiB7
InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5p
dGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVM
XCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9E
SVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENc
IiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIg
eG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4
c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6
Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwi
aHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJ4Zm9yY2VfZmlsZV9o
YXNoXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJ4Zm9yY2VfZmlsZV9oYXNoXCI+PGRv
Y3VtZW50YXRpb24+d29ya2Zsb3cgZm9yIGxvb2t1cCBhYm91dCBmaWxlcyBoYXNoZXMgaWYgaXQg
bWFsaWNpb3VzIG9yIG5vdDwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMThyc2VyOTwvb3V0Z29pbmc+PC9z
dGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzF1ajZydDVcIiBuYW1lPVwi
eGZvcmNlX2h5YnJpZF9hcnRpZmFjdHNfYXR0YWNobWVuLi4uXCIgcmVzaWxpZW50OnR5cGU9XCJm
dW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI3
NzExY2NkNC1hYmExLTRjZDMtOWQ4Zi03ZWMwMWUzOGUyZDVcIj57XCJpbnB1dHNcIjp7fSxcInBy
ZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLmF0dGFjaG1lbnRfbmFtZSA9IGF0dGFjaG1l
bnQubmFtZVxcbmlucHV0cy5hdHRhY2htZW50X2lkICAgPSBhdHRhY2htZW50LmlkXCJ9PC9yZXNp
bGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93
XzE4cnNlcjk8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGQwdm5zbDwvb3V0Z29p
bmc+PC9zZXJ2aWNlVGFzaz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wMGNnYXk4XCI+PGluY29t
aW5nPlNlcXVlbmNlRmxvd18wZDB2bnNsPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZs
b3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMGQwdm5zbFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzF1
ajZydDVcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wMGNnYXk4XCIvPjxzZXF1ZW5jZUZsb3cgaWQ9
XCJTZXF1ZW5jZUZsb3dfMThyc2VyOVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
IHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzF1ajZydDVcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwi
VGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwv
dGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVq
NDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBN
TkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIg
aWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRF
dmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIyNzZcIiB5PVwiMTg4XCIvPjxicG1uZGk6
QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMjcx
XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwi
VGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3
aWR0aD1cIjEwMFwiIHg9XCI4MlwiIHk9XCIxOTFcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1u
ZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3Nv
Y2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyNzZcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE4MlwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMXVqNnJ0NVwiIGlkPVwiU2Vydmlj
ZVRhc2tfMXVqNnJ0NV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEw
MFwiIHg9XCI0MDJcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzAwY2dheThcIiBpZD1cIkVuZEV2ZW50XzAwY2dh
eThfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2MjNc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTJc
IiB3aWR0aD1cIjBcIiB4PVwiNjQxXCIgeT1cIjIyOFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZs
b3dfMGQwdm5zbFwiIGlkPVwiU2VxdWVuY2VGbG93XzBkMHZuc2xfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjUwMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiNjIzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwiMFwiIHg9
XCI1NjIuNVwiIHk9XCIxODVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdl
PjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMThyc2VyOVwiIGlk
PVwiU2VxdWVuY2VGbG93XzE4cnNlcjlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjMxMlwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDAy
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwiMFwiIHg9XCIzNTdcIiB5PVwiMTg1
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxh
bmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAi
eGZvcmNlX2ZpbGVfaGFzaCIsICJ2ZXJzaW9uIjogMX0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAx
NTY0NTcyNjc1OTU3LCAiY3JlYXRvcl9pZCI6ICJuZXdAZXhhbXBsZS5jb20iLCAiYWN0aW9ucyI6
IFtdLCAicHJvZ3JhbW1hdGljX25hbWUiOiAieGZvcmNlX2ZpbGVfaGFzaCIsICJuYW1lIjogInhm
b3JjZV9maWxlX2hhc2gifV0sICJhY3Rpb25zIjogW3sibG9naWNfdHlwZSI6ICJhbGwiLCAibmFt
ZSI6ICJ4Zm9yY2VfaHlicmlkX2FuYWx5emVfYXJ0aWZhY3QiLCAidmlld19pdGVtcyI6IFtdLCAi
dHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbInhmb3JjZV9oeWJyaWRfYW5hbHl6ZV9hcnRpZmFjdHMi
XSwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAi
dXVpZCI6ICI5ZTVlM2Y3Ni02OTBiLTQ1NjktYTBiZC1jNDU0YmI3ODU2MTMiLCAiYXV0b21hdGlv
bnMiOiBbXSwgImV4cG9ydF9rZXkiOiAieGZvcmNlX2h5YnJpZF9hbmFseXplX2FydGlmYWN0Iiwg
ImNvbmRpdGlvbnMiOiBbXSwgImlkIjogNTksICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFsieGZv
cmNlX2h5YmlyZF9maWxlc19yZWNvcmRzIl19LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5hbWUi
OiAieGZvcmNlX3NjYW5fZmlsZV9oYXNoIiwgInZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAi
d29ya2Zsb3dzIjogWyJ4Zm9yY2VfZmlsZV9oYXNoIl0sICJvYmplY3RfdHlwZSI6ICJhdHRhY2ht
ZW50IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICJmMGQyMDlmZC03YmQyLTQ1
NTktYWUyYS0xZTQ1Y2I2Y2JhMTAiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAi
eGZvcmNlX3NjYW5fZmlsZV9oYXNoIiwgImNvbmRpdGlvbnMiOiBbXSwgImlkIjogNjAsICJtZXNz
YWdlX2Rlc3RpbmF0aW9ucyI6IFsieGZvcmNlX2h5YmlyZF9maWxlc19yZWNvcmRzIl19XSwgImxh
eW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDcwLCAiaW5kdXN0
cmllcyI6IG51bGwsICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51
bGwsICJsb2NhbGUiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzIsICJ2ZXJz
aW9uIjogIjMyLjAuNDUwMiIsICJidWlsZF9udW1iZXIiOiA0NTAyLCAibWlub3IiOiAwfSwgInRp
bWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10s
ICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5X25hbWUiOiAieGZvcmNlX2h5YnJpZF9hcnRpZmFjdHNf
YXR0YWNobWVudHMiLCAiZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQiOiAiZnVuY3Rpb24gZm9yIGFu
YWx5emUgYXR0YWNobWVudHMgYW5kIGFydGlmYWN0cyBjb250YWluIGZpbGVzIG9yIGlwcyIsICJm
b3JtYXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIkVOUFBJIFBPQyIs
ICJ0eXBlIjogInVzZXIiLCAiaWQiOiAxLCAibmFtZSI6ICJuZXdAZXhhbXBsZS5jb20ifSwgInZp
ZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIs
ICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29u
dGVudCI6ICIwMzk1NWY1My01OTQwLTQ5ZmYtYTlkZi0wYjYwNzA5OTY1N2IiLCAic3RlcF9sYWJl
bCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwg
InNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250
ZW50IjogIjdkMWI0YzZmLWNhMDUtNGViNy1hZGU0LTI2NWYyZWJhODI1NCIsICJzdGVwX2xhYmVs
IjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRl
bnQiOiAiMGRkMWMyZTEtOTVjOS00NDRjLTg2ODgtMjY5ZGVhNmZiN2YxIiwgInN0ZXBfbGFiZWwi
OiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJz
aG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVu
dCI6ICIxN2MzZTY1Mi02NTU5LTQ5MzUtOWY5NS03NDM3NGNhMzdhN2IiLCAic3RlcF9sYWJlbCI6
IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50
IjogImRhOGI4YmE0LTI4YTMtNGFkMC1iMzVhLTM1NGIxYmM1OWZkNiIsICJzdGVwX2xhYmVsIjog
bnVsbH1dLCAiZXhwb3J0X2tleSI6ICJ4Zm9yY2VfaHlicmlkX2FydGlmYWN0c19hdHRhY2htZW50
cyIsICJ1dWlkIjogIjc3MTFjY2Q0LWFiYTEtNGNkMy05ZDhmLTdlYzAxZTM4ZTJkNSIsICJsYXN0
X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiRU5QUEkgUE9DIiwgInR5cGUiOiAidXNl
ciIsICJpZCI6IDEsICJuYW1lIjogIm5ld0BleGFtcGxlLmNvbSJ9LCAidmVyc2lvbiI6IDQsICJ3
b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhdHRhY2ht
ZW50IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAieGZvcmNlX2ZpbGVfaGFzaCIsICJ3b3JrZmxv
d19pZCI6IDQzLCAicHJvZ3JhbW1hdGljX25hbWUiOiAieGZvcmNlX2ZpbGVfaGFzaCIsICJ1dWlk
IjogbnVsbH0sIHsiZGVzY3JpcHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3Qi
LCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJ4Zm9yY2VfaHlicmlkIGFuYWx5emVfYXJ0aWZhY3Rz
IiwgIndvcmtmbG93X2lkIjogNDIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ4Zm9yY2VfaHlicmlk
X2FuYWx5emVfYXJ0aWZhY3RzIiwgInV1aWQiOiBudWxsfV0sICJsYXN0X21vZGlmaWVkX3RpbWUi
OiAxNTY0NTc4MTYyMzEzLCAiZGVzdGluYXRpb25faGFuZGxlIjogInhmb3JjZV9oeWJpcmRfZmls
ZXNfcmVjb3JkcyIsICJpZCI6IDQ2LCAibmFtZSI6ICJ4Zm9yY2VfaHlicmlkX2FydGlmYWN0c19h
dHRhY2htZW50cyJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGws
ICJpbmNpZGVudF90eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjogMTU2NDU4MzQ2MDY3MiwgImRlc2Ny
aXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5
IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1lIjog
IkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1NjQ1
ODM0NjA2NzIsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIs
ICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJo
aWRkZW4iOiBmYWxzZX1dLCAic2NyaXB0cyI6IFtdLCAidHlwZXMiOiBbXSwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW3sidXVpZCI6ICIxYzIzMDY3My1jNTgyLTQxZDMtYmY4Mi1hODJmMzAzZDBh
ODUiLCAiZXhwb3J0X2tleSI6ICJ4Zm9yY2VfaHliaXJkX2ZpbGVzX3JlY29yZHMiLCAibmFtZSI6
ICJ4Zm9yY2VfaHliaXJkX2ZpbGVzX3JlY29yZHMiLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJ4Zm9yY2VfaHliaXJkX2ZpbGVzX3JlY29yZHMiLCAiZXhwZWN0
X2FjayI6IHRydWUsICJ1c2VycyI6IFsibmV3QGV4YW1wbGUuY29tIl19XSwgImluY2lkZW50X2Fy
dGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjogW3sib3BlcmF0aW9ucyI6
IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiU2ltdWxh
dGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgImlkIjogNTksICJyZWFkX29ubHkiOiB0cnVlLCAidXVpZCI6ICJjM2YwZTNlZC0y
MWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBl
IjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNpbXVs
YXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwg
ImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAi
ZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlv
bnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJh
dHRhY2htZW50X2lkIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNo
YW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMDIsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAi
MTdjM2U2NTItNjU1OS00OTM1LTlmOTUtNzQzNzRjYTM3YTdiIiwgImNob3NlbiI6IGZhbHNlLCAi
aW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vYXR0YWNobWVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vo
b2xkZXIiOiAiIiwgIm5hbWUiOiAiYXR0YWNobWVudF9pZCIsICJkZXByZWNhdGVkIjogZmFsc2Us
ICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVy
YXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQi
OiAidGFyZ2V0X2lwIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNo
YW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNTEsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAi
N2QxYjRjNmYtY2EwNS00ZWI3LWFkZTQtMjY1ZjJlYmE4MjU0IiwgImNob3NlbiI6IGZhbHNlLCAi
aW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiIiwgImludGVybmFsIjogZmFsc2UsICJy
aWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0
aW9uL3RhcmdldF9pcCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIi
OiAiZW50ZXIgeW91ciB0YXJnZXQgaXAiLCAibmFtZSI6ICJ0YXJnZXRfaXAiLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBb
XX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjog
e30sICJ0ZXh0IjogImF0dGFjaG1lbnRfbmFtZSIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInBy
ZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTk1LCAicmVhZF9vbmx5Ijog
ZmFsc2UsICJ1dWlkIjogIjAzOTU1ZjUzLTU5NDAtNDlmZi1hOWRmLTBiNjA3MDk5NjU3YiIsICJj
aG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9y
dF9rZXkiOiAiX19mdW5jdGlvbi9hdHRhY2htZW50X25hbWUiLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImF0dGFjaG1lbnRfbmFtZSIsICJk
ZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZh
bHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25f
cGVybXMiOiB7fSwgInRleHQiOiAiaW5jaWRlbnRfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE5MCwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICIwZGQxYzJlMS05NWM5LTQ0NGMtODY4OC0yNjlkZWE2ZmI3ZjEi
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIiIs
ICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1
aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVf
aWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJhcnRpZmFjdF9pZCIsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwg
ImlkIjogMTgxLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImRhOGI4YmE0LTI4YTMtNGFk
MC1iMzVhLTM1NGIxYmM1OWZkNiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAibnVt
YmVyIiwgInRvb2x0aXAiOiAiIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2FydGlmYWN0X2lk
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6
ICJhcnRpZmFjdF9pZCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9k
YXRlIjogMTU2NDU4MzQ1ODQ5N30=
"""
    )